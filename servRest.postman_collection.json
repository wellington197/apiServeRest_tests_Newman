{
	"info": {
		"_postman_id": "9ccf2f2e-9650-4318-b222-b7c96ca87953",
		"name": "API ServRest",
		"description": "Esta é a collection de testes da API de ServeRest do site [https://serverest.dev/](https://serverest.dev/).  \n\nAPI gratuita de testes gratuita que **simula uma loja virtual com intuito de servir de material de estudos de testes de API.**\n\nEndFragment\n\nNesses testes irão validar alguns tópicos importantes sobre a API.\n\n1. Testes de acesso via Token.\n2. Testes de respostas e Velocidade da API.\n3. Requisições via GET,PUT,DELETE e PUT.\n4. Documentação.\n5. Automação comk Newman.\n6. Integração.\n7. CI/CD via Azure DevOps.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22454810"
	},
	"item": [
		{
			"name": "Geração de massa",
			"item": [
				{
					"name": "busca nova pessoa",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"// Capturar nome,e-mail, senha\r",
									"\r",
									"/** Setar em uma variável global o nome do usuário da API */\r",
									"pm.globals.set(\"userName\", pm.response.json().results[0].name.first);\r",
									"\r",
									"/** Setar em uma variável global o Email do usuário da API */\r",
									"pm.globals.set(\"userEmail\", pm.response.json().results[0].email);\r",
									"\r",
									"/** Setar em uma variável global a Senha do usuário da API */\r",
									"pm.globals.set(\"userPassword\", pm.response.json().results[0].login.password);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://randomuser.me/api/",
							"protocol": "https",
							"host": [
								"randomuser",
								"me"
							],
							"path": [
								"api",
								""
							]
						}
					},
					"response": [
						{
							"name": "busca nova pessoa",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://randomuser.me/api/",
									"protocol": "https",
									"host": [
										"randomuser",
										"me"
									],
									"path": [
										"api",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 11 Jan 2024 11:38:32 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "ETag",
									"value": "W/\"494-o12/dF0btPdiYkP0w0GgBRfQntM\""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Report-To",
									"value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=%2BqqLA9504fErKZcTN1pxWcrhuTGL9FEJ4M%2Be34uufBWJ3U4NwBn7RndFFy0TclRX6HoPJPGrJdhahRdYywBXCYjU%2B%2FwievuCv61TMfhiv3QsdF7XFpPBJAP4yoFuEc6R\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
								},
								{
									"key": "NEL",
									"value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "843cdfc23cf0d144-FOR"
								},
								{
									"key": "Content-Encoding",
									"value": "br"
								},
								{
									"key": "alt-svc",
									"value": "h3=\":443\"; ma=86400"
								}
							],
							"cookie": [],
							"body": "{\n    \"results\": [\n        {\n            \"gender\": \"male\",\n            \"name\": {\n                \"title\": \"Mr\",\n                \"first\": \"Tristan\",\n                \"last\": \"Johnson\"\n            },\n            \"location\": {\n                \"street\": {\n                    \"number\": 4409,\n                    \"name\": \"Disputed Rd\"\n                },\n                \"city\": \"Inwood\",\n                \"state\": \"New Brunswick\",\n                \"country\": \"Canada\",\n                \"postcode\": \"R2W 7T4\",\n                \"coordinates\": {\n                    \"latitude\": \"-66.2398\",\n                    \"longitude\": \"-35.4164\"\n                },\n                \"timezone\": {\n                    \"offset\": \"-4:00\",\n                    \"description\": \"Atlantic Time (Canada), Caracas, La Paz\"\n                }\n            },\n            \"email\": \"tristan.johnson@example.com\",\n            \"login\": {\n                \"uuid\": \"e647674c-0b33-4045-a182-524239ba1564\",\n                \"username\": \"lazydog383\",\n                \"password\": \"banzai\",\n                \"salt\": \"bRopbquA\",\n                \"md5\": \"9c67677957efe7a5dc5c20be6d93c2da\",\n                \"sha1\": \"3abd8bd416e98b289da5f4dc71723352f4f2a8ac\",\n                \"sha256\": \"35dea7f53b57f1f13572a3299732b308b336496a6467c89634ad293923d24e6e\"\n            },\n            \"dob\": {\n                \"date\": \"1952-09-19T04:39:40.914Z\",\n                \"age\": 71\n            },\n            \"registered\": {\n                \"date\": \"2007-06-07T17:49:47.868Z\",\n                \"age\": 16\n            },\n            \"phone\": \"F57 Q13-3380\",\n            \"cell\": \"H62 C44-0797\",\n            \"id\": {\n                \"name\": \"SIN\",\n                \"value\": \"093443851\"\n            },\n            \"picture\": {\n                \"large\": \"https://randomuser.me/api/portraits/men/13.jpg\",\n                \"medium\": \"https://randomuser.me/api/portraits/med/men/13.jpg\",\n                \"thumbnail\": \"https://randomuser.me/api/portraits/thumb/men/13.jpg\"\n            },\n            \"nat\": \"CA\"\n        }\n    ],\n    \"info\": {\n        \"seed\": \"557d0b761cf361be\",\n        \"results\": 1,\n        \"page\": 1,\n        \"version\": \"1.4\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Realizar Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Buscando a resposta do Jason\r",
									"const resposta=pm.response.json();\r",
									"\r",
									"pm.globals.set(\"authorization\", resposta.authorization);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Login realizado com sucesso\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/**Limpar a variável global sempre antes de usar\r",
									" * No caso a varíável \"schema\"\r",
									" */\r",
									"\r",
									"pm.globals.unset(\"schema\");\r",
									"\r",
									"\r",
									"/**Depois já crio a variável \"schema\" como global \r",
									" * Assim ela sempre é limpada antes de cria uma nova\r",
									" */\r",
									"\r",
									"pm.globals.set(\"schema\", {\r",
									"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"required\": [\r",
									"        \"message\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The message Schema\",\r",
									"            \"examples\": [\r",
									"                \"Registro excluído com sucesso | Nenhum registro excluído\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"examples\": [{\r",
									"        \"message\": \"Registro excluído com sucesso | Nenhum registro excluído\"\r",
									"    }]\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"fulano@qa.com\",\r\n  \"password\": \"teste\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/login",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"login"
							]
						},
						"description": "Realizar login com e-mail e senha VÁLIDO.\n\nStartFragment\n\nResultados esperados:\n\n\\- Response code 200\n\n\\- String \"Login realizado com sucesso\" no corpo do response\n\n\\- Tempo de resposta < 2000ms\n\n  \n\nEndFragment"
					},
					"response": [
						{
							"name": "Realizar Login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"fulano@qa.com\",\r\n  \"password\": \"teste\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_base}}/login",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "x-dns-prefetch-control",
									"value": "off"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "x-download-options",
									"value": "noopen"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-moesif-transaction-id",
									"value": "4ca3da88-9cbf-4f8e-aeaa-7ef3c8b3f75f"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Cloud-Trace-Context",
									"value": "5b4a310decc240ae6503837c21c7cb30;o=1"
								},
								{
									"key": "Date",
									"value": "Sun, 21 May 2023 12:21:54 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Content-Length",
									"value": "265"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Login realizado com sucesso\",\n    \"authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjg0NjcxNzE0LCJleHAiOjE2ODQ2NzIzMTR9.Z0Wfy-W9BgIzR2cxbEolw9IvPKgJCo_5IfIMt51u5Dc\"\n}"
						}
					]
				}
			],
			"description": "Testes de realização de Login para que autentique o seu usuário para montar um carrinho e, se for administrador, gerenciar os produtos.\n\nA duração do token retornado em authorization é de 600 segundos (10 minutos). Caso esteja expirado irá receber status code 401 (Unauthorized)."
		},
		{
			"name": "Usuários",
			"item": [
				{
					"name": "Cadastrar novo usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Criar uma constante para buscar as repostas do Json\r",
									"const resposta = pm.response.json()\r",
									"\r",
									"/**Validar status code */\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"\r",
									"//Valida a resposta com a mendagem da requisição\r",
									"pm.test(\"Descrição da resposta\", function () {\r",
									"    pm.expect(resposta.message).to.be.eql(\"Cadastro realizado com sucesso\")\r",
									"    /**Outra forma\r",
									"     * pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
									"    */\r",
									"}); \r",
									"\r",
									"/**Capiturar ID e colocar em uma variável */\r",
									"pm.test(\"Capiturar ID\", function () {\r",
									"\r",
									"    pm.globals.set(\"userId\", resposta._id );\r",
									"});\r",
									"\r",
									"\r",
									"/** CONTRATO - Validar corpo da resposta\r",
									" * O schema foi passado via pré request\r",
									"*/\r",
									"\r",
									"pm.test(\"Validar a estrutura do corpo da resposta\", function () {\r",
									"        pm.expect(tv4.validate(resposta, pm.globals.get('schema'))).to.be.true;\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/**Limpar a variável global sempre antes de usar\r",
									" * No caso a varíável \"schema\"\r",
									" */\r",
									"\r",
									"pm.globals.unset(\"schema\");\r",
									"\r",
									"\r",
									"/**Depois já crio a variável \"schema\" como global \r",
									" * Assim ela sempre é limpada antes de cria uma nova\r",
									" */\r",
									"\r",
									"pm.globals.set(\"schema\", {\r",
									"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"required\": [\r",
									"        \"message\",\r",
									"        \"_id\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"message\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The message Schema\",\r",
									"            \"examples\": [\r",
									"                \"Cadastro realizado com sucesso\"\r",
									"            ]\r",
									"        },\r",
									"        \"_id\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The _id Schema\",\r",
									"            \"examples\": [\r",
									"                \"jogfODIlXsqxNFS2\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"examples\": [{\r",
									"        \"message\": \"Cadastro realizado com sucesso\",\r",
									"        \"_id\": \"jogfODIlXsqxNFS2\"\r",
									"    }]\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"{{userName}}\",\r\n  \"email\": \"{{userEmail}}\",\r\n  \"password\": \"{{userPassword}}\",\r\n  \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/usuarios",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"usuarios"
							]
						},
						"description": "StartFragment\n\nNesse teste será validado se é permitido cadastrar usuário com email e senha.\n\nResultados esperados:\n\n\\- Response code 201\n\n\\- String \"Cadastro realizado com sucesso\" no corpo do response\n\n\\- Tempo de resposta < 2000ms\n\nEndFragment"
					},
					"response": [
						{
							"name": "Cadastrar usuários",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nome\": \"Fulano Silva\",\r\n  \"email\": \"Josue@teste.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_base}}/usuarios",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "x-dns-prefetch-control",
									"value": "off"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "x-download-options",
									"value": "noopen"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-moesif-transaction-id",
									"value": "567a0985-1884-408d-a8cb-c01169d2ca1e"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Cloud-Trace-Context",
									"value": "4462284bc00598e080fbd896cd9ec66d;o=1"
								},
								{
									"key": "Date",
									"value": "Sun, 21 May 2023 12:28:49 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Content-Length",
									"value": "82"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Cadastro realizado com sucesso\",\n    \"_id\": \"GxGLRLmvnDVWjEz6\"\n}"
						}
					]
				},
				{
					"name": "buscar usuário pelo id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"/**Validar se ID foi retornado */\r",
									"pm.test('Validar se Id foi retornado está de acordo', function (){\r",
									"    pm.expect(pm.response.json()._id).to.be.eql(pm.globals.get('userId'))\r",
									"})\r",
									"\r",
									"/**Validar se ID foi retornado */\r",
									"pm.test('Validar se Email foi retornado está de acordo', function (){\r",
									"    pm.expect(pm.response.json().email).to.be.eql(pm.globals.get('userEmail'))\r",
									"})\r",
									"\r",
									"/**Validar se ID foi retornado */\r",
									"pm.test('Validar se Password foi retornado está de acordo', function (){\r",
									"    pm.expect(pm.response.json().password).to.be.eql(pm.globals.get('userPassword'))\r",
									"})\r",
									"\r",
									"/** CONTRATO - Validar corpo da resposta\r",
									" * O schema foi passado via pré request\r",
									" */\r",
									"pm.test(\"Validar (Contrato) a estrutura do corpo da resposta\", function () {\r",
									"        pm.expect(tv4.validate(pm.response.json(), pm.globals.get('schema'))).to.be.true;\r",
									"\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" /** Limpa a variável global \"schema\" */\r",
									"pm.globals.unset(\"schema\");\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"/**Depois já crio a variável \"schema\" como global\r",
									" * Assim ela sempre é limpada antes de cria uma nova\r",
									" */\r",
									"\r",
									"\r",
									"pm.globals.set(\"schema\", {\r",
									"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"required\": [\r",
									"        \"nome\",\r",
									"        \"email\",\r",
									"        \"password\",\r",
									"        \"administrador\",\r",
									"        \"_id\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"nome\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The nome Schema\",\r",
									"            \"examples\": [\r",
									"                \"Fulano da Silva\"\r",
									"            ]\r",
									"        },\r",
									"        \"email\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The email Schema\",\r",
									"            \"examples\": [\r",
									"                \"beltrano@qa.com.br\"\r",
									"            ]\r",
									"        },\r",
									"        \"password\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The password Schema\",\r",
									"            \"examples\": [\r",
									"                \"teste\"\r",
									"            ]\r",
									"        },\r",
									"        \"administrador\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The administrador Schema\",\r",
									"            \"examples\": [\r",
									"                \"true\"\r",
									"            ]\r",
									"        },\r",
									"        \"_id\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The _id Schema\",\r",
									"            \"examples\": [\r",
									"                \"0uxuPY0cbmQhpEz1\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"examples\": [{\r",
									"        \"nome\": \"Fulano da Silva\",\r",
									"        \"email\": \"beltrano@qa.com.br\",\r",
									"        \"password\": \"teste\",\r",
									"        \"administrador\": \"true\",\r",
									"        \"_id\": \"0uxuPY0cbmQhpEz1\"\r",
									"    }]\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/usuarios/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"usuarios",
								"{{userId}}"
							]
						},
						"description": "Busca lista de usuários completa\n\nResultados esperados:\n\n\\- Response code 20\n\n\\- String \"Lista de usuários\" no corpo do response\n\n\\- Tempo de resposta < 2000ms"
					},
					"response": [
						{
							"name": "Lista completa dos dados de usuários",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/usuarios",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "x-dns-prefetch-control",
									"value": "off"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "x-download-options",
									"value": "noopen"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-moesif-transaction-id",
									"value": "8f18daf8-2bdf-48b9-9ce7-97af194bef5d"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Cloud-Trace-Context",
									"value": "cc3f7a36d6b087adbc46ed6bc46a18ba;o=1"
								},
								{
									"key": "Date",
									"value": "Sun, 21 May 2023 12:55:50 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Content-Length",
									"value": "2848"
								}
							],
							"cookie": [],
							"body": "{\n    \"quantidade\": 13,\n    \"usuarios\": [\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"fulano@qa.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"0uxuPY0cbmQhpEz1\"\n        },\n        {\n            \"nome\": \"Test.API\",\n            \"email\": \"Test.API@teste.com.br\",\n            \"password\": \"teste.123\",\n            \"administrador\": \"true\",\n            \"_id\": \"56dR9RlDWJ8TrQKz\"\n        },\n        {\n            \"nome\": \"Test123584\",\n            \"email\": \"teste.w@gmail.com\",\n            \"password\": \"teste.123\",\n            \"administrador\": \"false\",\n            \"_id\": \"8BDmrWOEOBnTDORH\"\n        },\n        {\n            \"nome\": \"Fulano Silva\",\n            \"email\": \"Josue@teste.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"GxGLRLmvnDVWjEz6\"\n        },\n        {\n            \"nome\": \"Keith Funk\",\n            \"email\": \"keithfunk@test.com\",\n            \"password\": \"Test;123\",\n            \"administrador\": \"true\",\n            \"_id\": \"LrAnSa7csYQIn9yI\"\n        },\n        {\n            \"nome\": \"Fulano Silva\",\n            \"email\": \"Josueester@teste.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"PabZ2VQmrU8vqBid\"\n        },\n        {\n            \"nome\": \"Wade Boehm DVM\",\n            \"email\": \"wadeboehmdvm@test.com\",\n            \"password\": \"Test;123\",\n            \"administrador\": \"true\",\n            \"_id\": \"gjJ5C3xI1GqJOZtn\"\n        },\n        {\n            \"nome\": \"Robyn.Lindgren96\",\n            \"email\": \"Casimir38@hotmail.com\",\n            \"password\": \"123456789\",\n            \"administrador\": \"true\",\n            \"_id\": \"hQF8JPhsOkZmb6rT\"\n        },\n        {\n            \"nome\": \"Theresa Waelchi\",\n            \"email\": \"theresawaelchi@test.com\",\n            \"password\": \"Test;123\",\n            \"administrador\": \"true\",\n            \"_id\": \"lTMgeT8Jj2gb4o0x\"\n        },\n        {\n            \"nome\": \"Fulano Silveira da Silva\",\n            \"email\": \"Josue@testerqqaa.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"rOSggLbIOj4Maluc\"\n        },\n        {\n            \"nome\": \"Fulano Silveira da Silva\",\n            \"email\": \"Josue@testerqaa.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"ujjQWYbPqI5S9Axd\"\n        },\n        {\n            \"nome\": \"Oliver Windler\",\n            \"email\": \"Emmitt.Effertz29@hotmail.com\",\n            \"password\": \"fJB9KASct4En_Es\",\n            \"administrador\": \"true\",\n            \"_id\": \"z9tDmoslxFKqmvRH\"\n        },\n        {\n            \"nome\": \"Test123584\",\n            \"email\": \"teste.w@gmail.com\",\n            \"password\": \"teste.123\",\n            \"administrador\": \"false\",\n            \"_id\": \"zE9j4dqAwpRRGONU\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Editar um usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"{{userName}}\",\r\n  \"email\": \"{{userEmail}}\",\r\n  \"password\": \"{{userPassword}}\",\r\n  \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/usuarios/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"usuarios",
								"{{userId}}"
							]
						},
						"description": "Editar um usuário  \n\\* Não é permitido cadastrar usuário com email já utilizado.  \nCaso não seja encontrado usuário com o ID informado é realizado novo cadastro ao invés de alteração.  \n  \n\nResultados esperados:\n\n\\- Response code 201 para Cadastro com sucesso\n\n\\- Response code 400 para Cadastro com sucesso\n\n\\- Tempo de resposta < 2000ms"
					},
					"response": [
						{
							"name": "Realizar Login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"fulano@qa.com\",\r\n  \"password\": \"teste\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_base}}/login",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "x-dns-prefetch-control",
									"value": "off"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "x-download-options",
									"value": "noopen"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-moesif-transaction-id",
									"value": "4ca3da88-9cbf-4f8e-aeaa-7ef3c8b3f75f"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Cloud-Trace-Context",
									"value": "5b4a310decc240ae6503837c21c7cb30;o=1"
								},
								{
									"key": "Date",
									"value": "Sun, 21 May 2023 12:21:54 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Content-Length",
									"value": "265"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Login realizado com sucesso\",\n    \"authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZ1bGFub0BxYS5jb20iLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjg0NjcxNzE0LCJleHAiOjE2ODQ2NzIzMTR9.Z0Wfy-W9BgIzR2cxbEolw9IvPKgJCo_5IfIMt51u5Dc\"\n}"
						}
					]
				},
				{
					"name": "buscar usuário alterado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/**Validar se ID foi retornado como true*/\r",
									"pm.test('Validar se administrador foi alterado para true', function (){\r",
									"    pm.expect(pm.response.json().administrador).to.be.eql('true')\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/usuarios/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"usuarios",
								"{{userId}}"
							]
						},
						"description": "Busca lista de usuários completa\n\nResultados esperados:\n\n\\- Response code 20\n\n\\- String \"Lista de usuários\" no corpo do response\n\n\\- Tempo de resposta < 2000ms"
					},
					"response": [
						{
							"name": "Lista completa dos dados de usuários",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/usuarios",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "x-dns-prefetch-control",
									"value": "off"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "x-download-options",
									"value": "noopen"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-moesif-transaction-id",
									"value": "8f18daf8-2bdf-48b9-9ce7-97af194bef5d"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Cloud-Trace-Context",
									"value": "cc3f7a36d6b087adbc46ed6bc46a18ba;o=1"
								},
								{
									"key": "Date",
									"value": "Sun, 21 May 2023 12:55:50 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Content-Length",
									"value": "2848"
								}
							],
							"cookie": [],
							"body": "{\n    \"quantidade\": 13,\n    \"usuarios\": [\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"fulano@qa.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"0uxuPY0cbmQhpEz1\"\n        },\n        {\n            \"nome\": \"Test.API\",\n            \"email\": \"Test.API@teste.com.br\",\n            \"password\": \"teste.123\",\n            \"administrador\": \"true\",\n            \"_id\": \"56dR9RlDWJ8TrQKz\"\n        },\n        {\n            \"nome\": \"Test123584\",\n            \"email\": \"teste.w@gmail.com\",\n            \"password\": \"teste.123\",\n            \"administrador\": \"false\",\n            \"_id\": \"8BDmrWOEOBnTDORH\"\n        },\n        {\n            \"nome\": \"Fulano Silva\",\n            \"email\": \"Josue@teste.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"GxGLRLmvnDVWjEz6\"\n        },\n        {\n            \"nome\": \"Keith Funk\",\n            \"email\": \"keithfunk@test.com\",\n            \"password\": \"Test;123\",\n            \"administrador\": \"true\",\n            \"_id\": \"LrAnSa7csYQIn9yI\"\n        },\n        {\n            \"nome\": \"Fulano Silva\",\n            \"email\": \"Josueester@teste.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"PabZ2VQmrU8vqBid\"\n        },\n        {\n            \"nome\": \"Wade Boehm DVM\",\n            \"email\": \"wadeboehmdvm@test.com\",\n            \"password\": \"Test;123\",\n            \"administrador\": \"true\",\n            \"_id\": \"gjJ5C3xI1GqJOZtn\"\n        },\n        {\n            \"nome\": \"Robyn.Lindgren96\",\n            \"email\": \"Casimir38@hotmail.com\",\n            \"password\": \"123456789\",\n            \"administrador\": \"true\",\n            \"_id\": \"hQF8JPhsOkZmb6rT\"\n        },\n        {\n            \"nome\": \"Theresa Waelchi\",\n            \"email\": \"theresawaelchi@test.com\",\n            \"password\": \"Test;123\",\n            \"administrador\": \"true\",\n            \"_id\": \"lTMgeT8Jj2gb4o0x\"\n        },\n        {\n            \"nome\": \"Fulano Silveira da Silva\",\n            \"email\": \"Josue@testerqqaa.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"rOSggLbIOj4Maluc\"\n        },\n        {\n            \"nome\": \"Fulano Silveira da Silva\",\n            \"email\": \"Josue@testerqaa.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"ujjQWYbPqI5S9Axd\"\n        },\n        {\n            \"nome\": \"Oliver Windler\",\n            \"email\": \"Emmitt.Effertz29@hotmail.com\",\n            \"password\": \"fJB9KASct4En_Es\",\n            \"administrador\": \"true\",\n            \"_id\": \"z9tDmoslxFKqmvRH\"\n        },\n        {\n            \"nome\": \"Test123584\",\n            \"email\": \"teste.w@gmail.com\",\n            \"password\": \"teste.123\",\n            \"administrador\": \"false\",\n            \"_id\": \"zE9j4dqAwpRRGONU\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "deletar usuário da base",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/usuarios/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"usuarios",
								"{{userId}}"
							]
						},
						"description": "Busca lista de usuários completa\n\nResultados esperados:\n\n\\- Response code 20\n\n\\- String \"Lista de usuários\" no corpo do response\n\n\\- Tempo de resposta < 2000ms"
					},
					"response": [
						{
							"name": "Lista completa dos dados de usuários",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}/usuarios",
									"host": [
										"{{url_base}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "access-control-allow-origin",
									"value": "*"
								},
								{
									"key": "x-dns-prefetch-control",
									"value": "off"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "x-download-options",
									"value": "noopen"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "1; mode=block"
								},
								{
									"key": "x-moesif-transaction-id",
									"value": "8f18daf8-2bdf-48b9-9ce7-97af194bef5d"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "X-Cloud-Trace-Context",
									"value": "cc3f7a36d6b087adbc46ed6bc46a18ba;o=1"
								},
								{
									"key": "Date",
									"value": "Sun, 21 May 2023 12:55:50 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Content-Length",
									"value": "2848"
								}
							],
							"cookie": [],
							"body": "{\n    \"quantidade\": 13,\n    \"usuarios\": [\n        {\n            \"nome\": \"Fulano da Silva\",\n            \"email\": \"fulano@qa.com\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"0uxuPY0cbmQhpEz1\"\n        },\n        {\n            \"nome\": \"Test.API\",\n            \"email\": \"Test.API@teste.com.br\",\n            \"password\": \"teste.123\",\n            \"administrador\": \"true\",\n            \"_id\": \"56dR9RlDWJ8TrQKz\"\n        },\n        {\n            \"nome\": \"Test123584\",\n            \"email\": \"teste.w@gmail.com\",\n            \"password\": \"teste.123\",\n            \"administrador\": \"false\",\n            \"_id\": \"8BDmrWOEOBnTDORH\"\n        },\n        {\n            \"nome\": \"Fulano Silva\",\n            \"email\": \"Josue@teste.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"GxGLRLmvnDVWjEz6\"\n        },\n        {\n            \"nome\": \"Keith Funk\",\n            \"email\": \"keithfunk@test.com\",\n            \"password\": \"Test;123\",\n            \"administrador\": \"true\",\n            \"_id\": \"LrAnSa7csYQIn9yI\"\n        },\n        {\n            \"nome\": \"Fulano Silva\",\n            \"email\": \"Josueester@teste.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"PabZ2VQmrU8vqBid\"\n        },\n        {\n            \"nome\": \"Wade Boehm DVM\",\n            \"email\": \"wadeboehmdvm@test.com\",\n            \"password\": \"Test;123\",\n            \"administrador\": \"true\",\n            \"_id\": \"gjJ5C3xI1GqJOZtn\"\n        },\n        {\n            \"nome\": \"Robyn.Lindgren96\",\n            \"email\": \"Casimir38@hotmail.com\",\n            \"password\": \"123456789\",\n            \"administrador\": \"true\",\n            \"_id\": \"hQF8JPhsOkZmb6rT\"\n        },\n        {\n            \"nome\": \"Theresa Waelchi\",\n            \"email\": \"theresawaelchi@test.com\",\n            \"password\": \"Test;123\",\n            \"administrador\": \"true\",\n            \"_id\": \"lTMgeT8Jj2gb4o0x\"\n        },\n        {\n            \"nome\": \"Fulano Silveira da Silva\",\n            \"email\": \"Josue@testerqqaa.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"rOSggLbIOj4Maluc\"\n        },\n        {\n            \"nome\": \"Fulano Silveira da Silva\",\n            \"email\": \"Josue@testerqaa.com.br\",\n            \"password\": \"teste\",\n            \"administrador\": \"true\",\n            \"_id\": \"ujjQWYbPqI5S9Axd\"\n        },\n        {\n            \"nome\": \"Oliver Windler\",\n            \"email\": \"Emmitt.Effertz29@hotmail.com\",\n            \"password\": \"fJB9KASct4En_Es\",\n            \"administrador\": \"true\",\n            \"_id\": \"z9tDmoslxFKqmvRH\"\n        },\n        {\n            \"nome\": \"Test123584\",\n            \"email\": \"teste.w@gmail.com\",\n            \"password\": \"teste.123\",\n            \"administrador\": \"false\",\n            \"_id\": \"zE9j4dqAwpRRGONU\"\n        }\n    ]\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authorization}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"//imprimir qual teste está sendo executado",
					"console.log(pm.info.requestName)"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"//MÉTODOS GET - Valida se status code está retornando de forma correta para os Métodos GET",
					"if(pm.request.method=='GET'){ ",
					"        pm.test(\"Status code is 200\", function () {",
					"            pm.response.to.have.status(200);",
					"        });",
					"    //Valida se retorna a string com OK",
					"    pm.test(\"Status code name has string\", function () {",
					"        pm.response.to.have.status(\"OK\");",
					"    });",
					"}",
					"",
					"//MÉTODOS GET e POST - Testa tempo de resposta para dois métodos: Muito importante para avaliar a velocidade de resposta da API.",
					"if(pm.request.method=='GET'|| pm.request.method=='POST'){ ",
					"  ",
					"    pm.test(\"Response time is less than 200ms\", () => {",
					"    pm.expect(pm.response.responseTime).to.be.below(200);",
					"    });",
					"",
					"    pm.test(\"Content-Type is present\", function () {",
					"        pm.response.to.have.header(\"Content-Type\");",
					"    });",
					" ",
					"}",
					"",
					""
				]
			}
		}
	]
}